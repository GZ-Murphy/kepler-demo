"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _deck = require("deck.gl");

var _utils = require("../layer-utils/utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultProps = _objectSpread({}, _deck.CPUGridLayer.defaultProps, {
  sizeScale: 'linear',
  colorScale: 'quantile'
});

var EnhancedCPUGridLayer =
/*#__PURE__*/
function (_CPUGridLayer) {
  (0, _inherits2["default"])(EnhancedCPUGridLayer, _CPUGridLayer);

  function EnhancedCPUGridLayer() {
    (0, _classCallCheck2["default"])(this, EnhancedCPUGridLayer);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(EnhancedCPUGridLayer).apply(this, arguments));
  }

  (0, _createClass2["default"])(EnhancedCPUGridLayer, [{
    key: "getDimensionUpdaters",
    value: function getDimensionUpdaters() {
      var dimensionUpdaters = (0, _get2["default"])((0, _getPrototypeOf2["default"])(EnhancedCPUGridLayer.prototype), "getDimensionUpdaters", this).call(this); // add colorScale and sizeScale to dimension updates

      dimensionUpdaters.getFillColor[1].triggers.push('colorScale');
      dimensionUpdaters.getElevation[1].triggers.push('sizeScale');
      return dimensionUpdaters;
    }
    /*
     * override default layer method to calculate color domain
     * and scale function base on color scale type
     */

  }, {
    key: "getColorValueDomain",
    value: function getColorValueDomain() {
      (0, _utils.getColorValueDomain)(this);
    }
  }, {
    key: "getColorScale",
    value: function getColorScale() {
      (0, _utils.getColorScaleFunction)(this);
    }
  }, {
    key: "getElevationScale",
    value: function getElevationScale() {
      (0, _utils.getElevationScaleFunction)(this);
    }
  }]);
  return EnhancedCPUGridLayer;
}(_deck.CPUGridLayer);

exports["default"] = EnhancedCPUGridLayer;
EnhancedCPUGridLayer.layerName = 'EnhancedGridLayer';
EnhancedCPUGridLayer.defaultProps = defaultProps;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kZWNrZ2wtbGF5ZXJzL2dyaWQtbGF5ZXIvZW5oYW5jZWQtY3B1LWdyaWQtbGF5ZXIuanMiXSwibmFtZXMiOlsiZGVmYXVsdFByb3BzIiwiQ1BVR3JpZExheWVyIiwic2l6ZVNjYWxlIiwiY29sb3JTY2FsZSIsIkVuaGFuY2VkQ1BVR3JpZExheWVyIiwiZGltZW5zaW9uVXBkYXRlcnMiLCJnZXRGaWxsQ29sb3IiLCJ0cmlnZ2VycyIsInB1c2giLCJnZXRFbGV2YXRpb24iLCJsYXllck5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBOztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxZQUFZLHFCQUNiQyxtQkFBYUQsWUFEQTtBQUVoQkUsRUFBQUEsU0FBUyxFQUFFLFFBRks7QUFHaEJDLEVBQUFBLFVBQVUsRUFBRTtBQUhJLEVBQWxCOztJQU1xQkMsb0I7Ozs7Ozs7Ozs7OzsyQ0FDSTtBQUNyQixVQUFNQyxpQkFBaUIsbUlBQXZCLENBRHFCLENBRXJCOztBQUNBQSxNQUFBQSxpQkFBaUIsQ0FBQ0MsWUFBbEIsQ0FBK0IsQ0FBL0IsRUFBa0NDLFFBQWxDLENBQTJDQyxJQUEzQyxDQUFnRCxZQUFoRDtBQUNBSCxNQUFBQSxpQkFBaUIsQ0FBQ0ksWUFBbEIsQ0FBK0IsQ0FBL0IsRUFBa0NGLFFBQWxDLENBQTJDQyxJQUEzQyxDQUFnRCxXQUFoRDtBQUNBLGFBQU9ILGlCQUFQO0FBQ0Q7QUFFRDs7Ozs7OzswQ0FJc0I7QUFDcEIsc0NBQW9CLElBQXBCO0FBQ0Q7OztvQ0FFZTtBQUNkLHdDQUFzQixJQUF0QjtBQUNEOzs7d0NBRW1CO0FBQ2xCLDRDQUEwQixJQUExQjtBQUNEOzs7RUF2QitDSixrQjs7O0FBMkJsREcsb0JBQW9CLENBQUNNLFNBQXJCLEdBQWlDLG1CQUFqQztBQUNBTixvQkFBb0IsQ0FBQ0osWUFBckIsR0FBb0NBLFlBQXBDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE5IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtDUFVHcmlkTGF5ZXJ9IGZyb20gJ2RlY2suZ2wnO1xuaW1wb3J0IHtnZXRDb2xvclZhbHVlRG9tYWluLCBnZXRDb2xvclNjYWxlRnVuY3Rpb24sIGdldEVsZXZhdGlvblNjYWxlRnVuY3Rpb259IGZyb20gJy4uL2xheWVyLXV0aWxzL3V0aWxzJztcblxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICAuLi5DUFVHcmlkTGF5ZXIuZGVmYXVsdFByb3BzLFxuICBzaXplU2NhbGU6ICdsaW5lYXInLFxuICBjb2xvclNjYWxlOiAncXVhbnRpbGUnXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmhhbmNlZENQVUdyaWRMYXllciBleHRlbmRzIENQVUdyaWRMYXllciB7XG4gIGdldERpbWVuc2lvblVwZGF0ZXJzKCkge1xuICAgIGNvbnN0IGRpbWVuc2lvblVwZGF0ZXJzID0gc3VwZXIuZ2V0RGltZW5zaW9uVXBkYXRlcnMoKTtcbiAgICAvLyBhZGQgY29sb3JTY2FsZSBhbmQgc2l6ZVNjYWxlIHRvIGRpbWVuc2lvbiB1cGRhdGVzXG4gICAgZGltZW5zaW9uVXBkYXRlcnMuZ2V0RmlsbENvbG9yWzFdLnRyaWdnZXJzLnB1c2goJ2NvbG9yU2NhbGUnKTtcbiAgICBkaW1lbnNpb25VcGRhdGVycy5nZXRFbGV2YXRpb25bMV0udHJpZ2dlcnMucHVzaCgnc2l6ZVNjYWxlJyk7XG4gICAgcmV0dXJuIGRpbWVuc2lvblVwZGF0ZXJzO1xuICB9XG5cbiAgLypcbiAgICogb3ZlcnJpZGUgZGVmYXVsdCBsYXllciBtZXRob2QgdG8gY2FsY3VsYXRlIGNvbG9yIGRvbWFpblxuICAgKiBhbmQgc2NhbGUgZnVuY3Rpb24gYmFzZSBvbiBjb2xvciBzY2FsZSB0eXBlXG4gICAqL1xuICBnZXRDb2xvclZhbHVlRG9tYWluKCkge1xuICAgIGdldENvbG9yVmFsdWVEb21haW4odGhpcyk7XG4gIH1cblxuICBnZXRDb2xvclNjYWxlKCkge1xuICAgIGdldENvbG9yU2NhbGVGdW5jdGlvbih0aGlzKTtcbiAgfVxuXG4gIGdldEVsZXZhdGlvblNjYWxlKCkge1xuICAgIGdldEVsZXZhdGlvblNjYWxlRnVuY3Rpb24odGhpcyk7XG4gIH1cblxufVxuXG5FbmhhbmNlZENQVUdyaWRMYXllci5sYXllck5hbWUgPSAnRW5oYW5jZWRHcmlkTGF5ZXInO1xuRW5oYW5jZWRDUFVHcmlkTGF5ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuIl19