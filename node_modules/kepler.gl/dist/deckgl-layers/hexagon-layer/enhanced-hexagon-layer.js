"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _deck = require("deck.gl");

var _hexagonAggregator = require("./hexagon-aggregator");

var _utils = require("../layer-utils/utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultProps = _objectSpread({}, _deck.HexagonLayer.defaultProps, {
  hexagonAggregator: _hexagonAggregator.pointToHexbin,
  colorScale: 'quantile'
});

var EnhancedHexagonLayer =
/*#__PURE__*/
function (_HexagonLayer) {
  (0, _inherits2["default"])(EnhancedHexagonLayer, _HexagonLayer);

  function EnhancedHexagonLayer() {
    (0, _classCallCheck2["default"])(this, EnhancedHexagonLayer);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(EnhancedHexagonLayer).apply(this, arguments));
  }

  (0, _createClass2["default"])(EnhancedHexagonLayer, [{
    key: "getDimensionUpdaters",
    value: function getDimensionUpdaters() {
      var dimensionUpdaters = (0, _get2["default"])((0, _getPrototypeOf2["default"])(EnhancedHexagonLayer.prototype), "getDimensionUpdaters", this).call(this); // add colorScale to dimension updates

      dimensionUpdaters.getFillColor[1].triggers.push('colorScale');
      dimensionUpdaters.getElevation[1].triggers.push('sizeScale');
      return dimensionUpdaters;
    }
    /*
     * override default layer method to calculate color domain
     * and scale function base on color scale type
     */

  }, {
    key: "getColorValueDomain",
    value: function getColorValueDomain() {
      (0, _utils.getColorValueDomain)(this);
    }
  }, {
    key: "getColorScale",
    value: function getColorScale() {
      (0, _utils.getColorScaleFunction)(this);
    }
  }]);
  return EnhancedHexagonLayer;
}(_deck.HexagonLayer);

exports["default"] = EnhancedHexagonLayer;
EnhancedHexagonLayer.layerName = 'EnhancedHexagonLayer';
EnhancedHexagonLayer.defaultProps = defaultProps;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kZWNrZ2wtbGF5ZXJzL2hleGFnb24tbGF5ZXIvZW5oYW5jZWQtaGV4YWdvbi1sYXllci5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0UHJvcHMiLCJIZXhhZ29uTGF5ZXIiLCJoZXhhZ29uQWdncmVnYXRvciIsInBvaW50VG9IZXhiaW4iLCJjb2xvclNjYWxlIiwiRW5oYW5jZWRIZXhhZ29uTGF5ZXIiLCJkaW1lbnNpb25VcGRhdGVycyIsImdldEZpbGxDb2xvciIsInRyaWdnZXJzIiwicHVzaCIsImdldEVsZXZhdGlvbiIsImxheWVyTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBRUE7Ozs7OztBQUVBLElBQU1BLFlBQVkscUJBQ2JDLG1CQUFhRCxZQURBO0FBRWhCRSxFQUFBQSxpQkFBaUIsRUFBRUMsZ0NBRkg7QUFHaEJDLEVBQUFBLFVBQVUsRUFBRTtBQUhJLEVBQWxCOztJQU1xQkMsb0I7Ozs7Ozs7Ozs7OzsyQ0FDSTtBQUNyQixVQUFNQyxpQkFBaUIsbUlBQXZCLENBRHFCLENBRXJCOztBQUNBQSxNQUFBQSxpQkFBaUIsQ0FBQ0MsWUFBbEIsQ0FBK0IsQ0FBL0IsRUFBa0NDLFFBQWxDLENBQTJDQyxJQUEzQyxDQUFnRCxZQUFoRDtBQUNBSCxNQUFBQSxpQkFBaUIsQ0FBQ0ksWUFBbEIsQ0FBK0IsQ0FBL0IsRUFBa0NGLFFBQWxDLENBQTJDQyxJQUEzQyxDQUFnRCxXQUFoRDtBQUNBLGFBQU9ILGlCQUFQO0FBQ0Q7QUFFRDs7Ozs7OzswQ0FJc0I7QUFDcEIsc0NBQW9CLElBQXBCO0FBQ0Q7OztvQ0FFZTtBQUNkLHdDQUFzQixJQUF0QjtBQUNEOzs7RUFuQitDTCxrQjs7O0FBc0JsREksb0JBQW9CLENBQUNNLFNBQXJCLEdBQWlDLHNCQUFqQztBQUNBTixvQkFBb0IsQ0FBQ0wsWUFBckIsR0FBb0NBLFlBQXBDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE5IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtIZXhhZ29uTGF5ZXJ9IGZyb20gJ2RlY2suZ2wnO1xuaW1wb3J0IHtwb2ludFRvSGV4YmlufSBmcm9tICcuL2hleGFnb24tYWdncmVnYXRvcic7XG5cbmltcG9ydCB7Z2V0Q29sb3JWYWx1ZURvbWFpbiwgZ2V0Q29sb3JTY2FsZUZ1bmN0aW9ufSBmcm9tICcuLi9sYXllci11dGlscy91dGlscyc7XG5cbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgLi4uSGV4YWdvbkxheWVyLmRlZmF1bHRQcm9wcyxcbiAgaGV4YWdvbkFnZ3JlZ2F0b3I6IHBvaW50VG9IZXhiaW4sXG4gIGNvbG9yU2NhbGU6ICdxdWFudGlsZSdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuaGFuY2VkSGV4YWdvbkxheWVyIGV4dGVuZHMgSGV4YWdvbkxheWVyIHtcbiAgZ2V0RGltZW5zaW9uVXBkYXRlcnMoKSB7XG4gICAgY29uc3QgZGltZW5zaW9uVXBkYXRlcnMgPSBzdXBlci5nZXREaW1lbnNpb25VcGRhdGVycygpO1xuICAgIC8vIGFkZCBjb2xvclNjYWxlIHRvIGRpbWVuc2lvbiB1cGRhdGVzXG4gICAgZGltZW5zaW9uVXBkYXRlcnMuZ2V0RmlsbENvbG9yWzFdLnRyaWdnZXJzLnB1c2goJ2NvbG9yU2NhbGUnKTtcbiAgICBkaW1lbnNpb25VcGRhdGVycy5nZXRFbGV2YXRpb25bMV0udHJpZ2dlcnMucHVzaCgnc2l6ZVNjYWxlJyk7XG4gICAgcmV0dXJuIGRpbWVuc2lvblVwZGF0ZXJzO1xuICB9XG5cbiAgLypcbiAgICogb3ZlcnJpZGUgZGVmYXVsdCBsYXllciBtZXRob2QgdG8gY2FsY3VsYXRlIGNvbG9yIGRvbWFpblxuICAgKiBhbmQgc2NhbGUgZnVuY3Rpb24gYmFzZSBvbiBjb2xvciBzY2FsZSB0eXBlXG4gICAqL1xuICBnZXRDb2xvclZhbHVlRG9tYWluKCkge1xuICAgIGdldENvbG9yVmFsdWVEb21haW4odGhpcyk7XG4gIH1cblxuICBnZXRDb2xvclNjYWxlKCkge1xuICAgIGdldENvbG9yU2NhbGVGdW5jdGlvbih0aGlzKTtcbiAgfVxufVxuXG5FbmhhbmNlZEhleGFnb25MYXllci5sYXllck5hbWUgPSAnRW5oYW5jZWRIZXhhZ29uTGF5ZXInO1xuRW5oYW5jZWRIZXhhZ29uTGF5ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuIl19