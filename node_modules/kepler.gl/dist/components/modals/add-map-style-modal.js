"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _reactMapGl = _interopRequireDefault(require("react-map-gl"));

var _styledComponents2 = require("../common/styled-components");

var _mediaBreakpoints = require("../../styles/media-breakpoints");

var _mapboxUtils = require("../../utils/map-style-utils/mapbox-utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _templateObject10() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  font-weight: 500;\n\n  :hover {\n    cursor: pointer;\n  }\n"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  background: ", ";\n  border-radius: 4px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.18);\n  width: ", "px;\n  height: ", "px;\n  position: relative;\n\n  .preview-image-placeholder {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  .preview-image-spinner {\n    position: absolute;\n    left: calc(50% - 25px);\n    top: calc(50% - 25px);\n  }\n"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    margin-left: unset;\n    .preview-title {\n      margin-top: 0px;\n    }\n  "]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    margin-left: 32px;\n  "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 116px;\n  flex-shrink: 0;\n\n  .preview-title {\n    font-weight: 500;\n    font-size: 10px;\n    padding: 8px 0px;\n  }\n\n  .preview-title.error {\n    color: ", ";\n  }\n\n  ", ";\n\n  ", ";\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    margin-bottom: 16px;\n  "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n    margin-bottom: 24px;\n  "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  margin-bottom: 32px;\n\n  .modal-section-title {\n    font-weight: 500;\n  }\n  .modal-section-subtitle {\n    color: ", ";\n  }\n\n  input {\n    margin-top: 8px;\n  }\n\n  ", ";\n  ", ";\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n      margin-top: 0;\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  font-size: 12px;\n\n  .modal-section:first-child {\n    margin-top: 24px;\n    ", ";\n  }\n\n  input {\n    margin-right: 8px;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var MapH = 190;
var MapW = 264;
var ErrorMsg = {
  styleError: 'Failed to load map style, make sure it is published. For private style, paste in your access token.'
};

var InstructionPanel = _styledComponents["default"].div(_templateObject(), _mediaBreakpoints.media.palm(_templateObject2()));

var StyledModalSection = _styledComponents["default"].div(_templateObject3(), function (props) {
  return props.theme.subtextColorLT;
}, _mediaBreakpoints.media.portable(_templateObject4()), _mediaBreakpoints.media.palm(_templateObject5()));

var PreviewMap = _styledComponents["default"].div(_templateObject6(), function (props) {
  return props.theme.errorColor;
}, _mediaBreakpoints.media.portable(_templateObject7()), _mediaBreakpoints.media.palm(_templateObject8()));

var StyledPreviewImage = _styledComponents["default"].div(_templateObject9(), function (props) {
  return props.theme.modalImagePlaceHolder;
}, MapW, MapH);

var InlineLink = _styledComponents["default"].a(_templateObject10());

var AddMapStyleModal =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(AddMapStyleModal, _Component);

  function AddMapStyleModal() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, AddMapStyleModal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AddMapStyleModal)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      reRenderKey: 0
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "loadMapStyleJson", function (style) {
      _this.props.loadCustomMapStyle({
        style: style,
        error: false
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "loadMapStyleError", function () {
      _this.props.loadCustomMapStyle({
        error: true
      });
    });
    return _this;
  }

  (0, _createClass2["default"])(AddMapStyleModal, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.inputStyle.accessToken !== nextProps.inputStyle.accessToken) {
        // toke has changed
        // ReactMapGl doesn't re-create map when token has changed
        // here we force the map to update
        this.setState({
          reRenderKey: this.state.reRenderKey + 1
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      var map = this.mapRef && this.mapRef.getMap();

      if (map && this._map !== map) {
        this._map = map;
        map.on('style.load', function () {
          var style = map.getStyle();

          _this2.loadMapStyleJson(style);
        });
        map.on('error', function () {
          _this2.loadMapStyleError();
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          inputStyle = _this$props.inputStyle,
          mapState = _this$props.mapState,
          mapboxApiUrl = _this$props.mapboxApiUrl;
      var mapboxApiAccessToken = inputStyle.accessToken || this.props.mapboxApiAccessToken;

      var mapProps = _objectSpread({}, mapState, {
        mapboxApiUrl: mapboxApiUrl,
        mapboxApiAccessToken: mapboxApiAccessToken,
        preserveDrawingBuffer: true,
        transformRequest: _mapboxUtils.transformRequest
      });

      return _react["default"].createElement("div", {
        className: "add-map-style-modal"
      }, _react["default"].createElement(_styledComponents2.StyledModalContent, null, _react["default"].createElement(InstructionPanel, null, _react["default"].createElement(StyledModalSection, {
        className: "modal-section"
      }, _react["default"].createElement("div", {
        className: "modal-section-title"
      }, "1. Publish your style at mapbox or provide access token"), _react["default"].createElement("div", {
        className: "modal-section-subtitle"
      }, "You can create your own map style at", _react["default"].createElement(InlineLink, {
        target: "_blank",
        href: "https://www.mapbox.com/studio/styles/"
      }, ' ', "mapbox"), ' ', "and", _react["default"].createElement(InlineLink, {
        target: "_blank",
        href: "https://www.mapbox.com/help/studio-manual-publish/"
      }, ' ', "publish"), ' ', "it."), _react["default"].createElement("div", {
        className: "modal-section-subtitle"
      }, "To use private style, paste your", _react["default"].createElement(InlineLink, {
        target: "_blank",
        href: "https://www.mapbox.com/help/how-access-tokens-work/"
      }, ' ', "access token"), ' ', "here. *kepler.gl is a client-side application, data stays in your browser.."), _react["default"].createElement(_styledComponents2.InputLight, {
        type: "text",
        value: inputStyle.accessToken || '',
        onChange: function onChange(_ref) {
          var value = _ref.target.value;
          return _this3.props.inputMapStyle({
            accessToken: value
          });
        },
        placeholder: "e.g. pk.abcdefg.xxxxxx"
      })), _react["default"].createElement(StyledModalSection, {
        className: "modal-section"
      }, _react["default"].createElement("div", {
        className: "modal-section-title"
      }, "2. Paste style url"), _react["default"].createElement("div", {
        className: "modal-section-subtitle"
      }, "What is a", _react["default"].createElement(InlineLink, {
        target: "_blank",
        href: "https://www.mapbox.com/help/studio-manual-publish/#style-url"
      }, ' ', "style URL")), _react["default"].createElement(_styledComponents2.InputLight, {
        type: "text",
        value: inputStyle.url || '',
        onChange: function onChange(_ref2) {
          var value = _ref2.target.value;
          return _this3.props.inputMapStyle({
            url: value
          });
        },
        placeholder: "e.g. mapbox://styles/uberdataviz/abcdefghijklmnopq"
      })), _react["default"].createElement(StyledModalSection, {
        className: "modal-section"
      }, _react["default"].createElement("div", {
        className: "modal-section-title"
      }, "3. Name your style"), _react["default"].createElement(_styledComponents2.InputLight, {
        type: "text",
        value: inputStyle.label || '',
        onChange: function onChange(_ref3) {
          var value = _ref3.target.value;
          return _this3.props.inputMapStyle({
            label: value
          });
        }
      }))), _react["default"].createElement(PreviewMap, null, _react["default"].createElement("div", {
        className: (0, _classnames["default"])('preview-title', {
          error: inputStyle.error
        })
      }, inputStyle.error ? ErrorMsg.styleError : inputStyle.style && inputStyle.style.name || ''), _react["default"].createElement(StyledPreviewImage, {
        className: "preview-image"
      }, !inputStyle.isValid ? _react["default"].createElement("div", {
        className: "preview-image-spinner"
      }) : _react["default"].createElement(_styledComponents2.StyledMapContainer, null, _react["default"].createElement(_reactMapGl["default"], (0, _extends2["default"])({}, mapProps, {
        ref: function ref(el) {
          _this3.mapRef = el;
        },
        key: this.state.reRenderKey,
        width: MapW,
        height: MapH,
        mapStyle: inputStyle.url
      })))))));
    }
  }]);
  return AddMapStyleModal;
}(_react.Component);

(0, _defineProperty2["default"])(AddMapStyleModal, "propTypes", {
  inputMapStyle: _propTypes["default"].func.isRequired,
  inputStyle: _propTypes["default"].object.isRequired,
  loadCustomMapStyle: _propTypes["default"].func.isRequired,
  mapboxApiAccessToken: _propTypes["default"].string.isRequired,
  mapboxApiUrl: _propTypes["default"].string.isRequired,
  mapState: _propTypes["default"].object.isRequired
});

var AddMapStyleModalFactory = function AddMapStyleModalFactory() {
  return AddMapStyleModal;
};

var _default = AddMapStyleModalFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,