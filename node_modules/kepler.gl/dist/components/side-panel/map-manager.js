"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = require("../common/styled-components");

var _mapStyleSelector = _interopRequireDefault(require("./map-style-panel/map-style-selector"));

var _mapLayerSelector = _interopRequireDefault(require("./map-style-panel/map-layer-selector"));

var _icons = require("../common/icons");

var _defaultSettings = require("../../constants/default-settings");

var _colorSelector = _interopRequireDefault(require("./layer-panel/color-selector"));

var _reselect = require("reselect");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

MapManagerFactory.deps = [_mapStyleSelector["default"], _mapLayerSelector["default"]];

function MapManagerFactory(MapStyleSelector, LayerGroupSelector) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inherits2["default"])(MapManager, _Component);

    function MapManager() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2["default"])(this, MapManager);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(MapManager)).call.apply(_getPrototypeOf2, [this].concat(args)));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
        isSelecting: false
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "buildingColorSelector", function (props) {
        return props.mapStyle.threeDBuildingColor;
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setColorSelector", function (props) {
        return props.set3dBuildingColor;
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "colorSetSelector", (0, _reselect.createSelector)(_this.buildingColorSelector, _this.setColorSelector, function (selectedColor, setColor) {
        return [{
          selectedColor: selectedColor,
          setColor: setColor,
          isRange: false,
          label: '3D Building Color'
        }];
      }));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_updateConfig", function (newProp) {
        var newConfig = _objectSpread({}, _this.props.mapStyle, {}, newProp);

        _this.props.onConfigChange(newConfig);
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_toggleSelecting", function () {
        _this.setState({
          isSelecting: !_this.state.isSelecting
        });
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_selectStyle", function (val) {
        _this.props.onStyleChange(val);

        _this._toggleSelecting();
      });
      return _this;
    }

    (0, _createClass2["default"])(MapManager, [{
      key: "render",
      value: function render() {
        var mapStyle = this.props.mapStyle;

        var editableLayers = _defaultSettings.DEFAULT_LAYER_GROUPS.map(function (lg) {
          return lg.slug;
        });

        var hasBuildingLayer = mapStyle.visibleLayerGroups['3d building'];
        var colorSets = this.colorSetSelector(this.props);
        return _react["default"].createElement("div", {
          className: "map-style-panel"
        }, _react["default"].createElement("div", null, _react["default"].createElement(MapStyleSelector, {
          mapStyle: mapStyle,
          isSelecting: this.state.isSelecting,
          onChange: this._selectStyle,
          toggleActive: this._toggleSelecting
        }), editableLayers.length ? _react["default"].createElement(LayerGroupSelector, {
          layers: mapStyle.visibleLayerGroups,
          editableLayers: editableLayers,
          topLayers: mapStyle.topLayerGroups,
          onChange: this._updateConfig
        }) : null, _react["default"].createElement(_styledComponents.SidePanelSection, null, _react["default"].createElement(_colorSelector["default"], {
          colorSets: colorSets,
          disabled: !hasBuildingLayer
        })), _react["default"].createElement(_styledComponents.Button, {
          onClick: this.props.showAddMapStyleModal,
          secondary: true
        }, _react["default"].createElement(_icons.Add, {
          height: "12px"
        }), "Add Map Style")));
      }
    }]);
    return MapManager;
  }(_react.Component), (0, _defineProperty2["default"])(_class, "propTypes", {
    mapStyle: _propTypes["default"].object.isRequired,
    onConfigChange: _propTypes["default"].func.isRequired,
    onStyleChange: _propTypes["default"].func.isRequired,
    showAddMapStyleModal: _propTypes["default"].func.isRequired
  }), _temp;
}

var _default = MapManagerFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpZGUtcGFuZWwvbWFwLW1hbmFnZXIuanMiXSwibmFtZXMiOlsiTWFwTWFuYWdlckZhY3RvcnkiLCJkZXBzIiwiTWFwU3R5bGVTZWxlY3RvckZhY3RvcnkiLCJMYXllckdyb3VwU2VsZWN0b3JGYWN0b3J5IiwiTWFwU3R5bGVTZWxlY3RvciIsIkxheWVyR3JvdXBTZWxlY3RvciIsImlzU2VsZWN0aW5nIiwicHJvcHMiLCJtYXBTdHlsZSIsInRocmVlREJ1aWxkaW5nQ29sb3IiLCJzZXQzZEJ1aWxkaW5nQ29sb3IiLCJidWlsZGluZ0NvbG9yU2VsZWN0b3IiLCJzZXRDb2xvclNlbGVjdG9yIiwic2VsZWN0ZWRDb2xvciIsInNldENvbG9yIiwiaXNSYW5nZSIsImxhYmVsIiwibmV3UHJvcCIsIm5ld0NvbmZpZyIsIm9uQ29uZmlnQ2hhbmdlIiwic2V0U3RhdGUiLCJzdGF0ZSIsInZhbCIsIm9uU3R5bGVDaGFuZ2UiLCJfdG9nZ2xlU2VsZWN0aW5nIiwiZWRpdGFibGVMYXllcnMiLCJERUZBVUxUX0xBWUVSX0dST1VQUyIsIm1hcCIsImxnIiwic2x1ZyIsImhhc0J1aWxkaW5nTGF5ZXIiLCJ2aXNpYmxlTGF5ZXJHcm91cHMiLCJjb2xvclNldHMiLCJjb2xvclNldFNlbGVjdG9yIiwiX3NlbGVjdFN0eWxlIiwibGVuZ3RoIiwidG9wTGF5ZXJHcm91cHMiLCJfdXBkYXRlQ29uZmlnIiwic2hvd0FkZE1hcFN0eWxlTW9kYWwiLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJvYmplY3QiLCJpc1JlcXVpcmVkIiwiZnVuYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUFBLGlCQUFpQixDQUFDQyxJQUFsQixHQUF5QixDQUFDQyw0QkFBRCxFQUEwQkMsNEJBQTFCLENBQXpCOztBQUVBLFNB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QUFBWixVQURGLGtCQXJCRixDQURGLENBREY7QUE4QkQ7QUEzRUg7QUFBQTtBQUFBLElBQWdDQyxnQkFBaEMseURBQ3FCO0FBQ2pCL0IsSUFBQUEsUUFBUSxFQUFFZ0Msc0JBQVVDLE1BQVYsQ0FBaUJDLFVBRFY7QUFFakJ2QixJQUFBQSxjQUFjLEVBQUVxQixzQkFBVUcsSUFBVixDQUFlRCxVQUZkO0FBR2pCbkIsSUFBQUEsYUFBYSxFQUFFaUIsc0JBQVVHLElBQVYsQ0FBZUQsVUFIYjtBQUlqQkosSUFBQUEsb0JBQW9CLEVBQUVFLHNCQUFVRyxJQUFWLENBQWVEO0FBSnBCLEdBRHJCO0FBNkVEOztlQUVjMUMsaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTkgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7QnV0dG9uLCBTaWRlUGFuZWxTZWN0aW9ufSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgTWFwU3R5bGVTZWxlY3RvckZhY3RvcnkgZnJvbSAnY29tcG9uZW50cy9zaWRlLXBhbmVsL21hcC1zdHlsZS1wYW5lbC9tYXAtc3R5bGUtc2VsZWN0b3InO1xuaW1wb3J0IExheWVyR3JvdXBTZWxlY3RvckZhY3RvcnkgZnJvbSAnY29tcG9uZW50cy9zaWRlLXBhbmVsL21hcC1zdHlsZS1wYW5lbC9tYXAtbGF5ZXItc2VsZWN0b3InO1xuXG5pbXBvcnQge0FkZH0gZnJvbSAnY29tcG9uZW50cy9jb21tb24vaWNvbnMnO1xuaW1wb3J0IHtERUZBVUxUX0xBWUVSX0dST1VQU30gZnJvbSAnY29uc3RhbnRzL2RlZmF1bHQtc2V0dGluZ3MnO1xuaW1wb3J0IENvbG9yU2VsZWN0b3IgZnJvbSAnLi9sYXllci1wYW5lbC9jb2xvci1zZWxlY3Rvcic7XG5pbXBvcnQge2NyZWF0ZVNlbGVjdG9yfSBmcm9tICdyZXNlbGVjdCc7XG5cbk1hcE1hbmFnZXJGYWN0b3J5LmRlcHMgPSBbTWFwU3R5bGVTZWxlY3RvckZhY3RvcnksIExheWVyR3JvdXBTZWxlY3RvckZhY3RvcnldO1xuXG5mdW5jdGlvbiBNYXBNYW5hZ2VyRmFjdG9yeShNYXBTdHlsZVNlbGVjdG9yLCBMYXllckdyb3VwU2VsZWN0b3IpIHtcbiAgcmV0dXJuIGNsYXNzIE1hcE1hbmFnZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICBtYXBTdHlsZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgICAgb25Db25maWdDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBvblN0eWxlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgc2hvd0FkZE1hcFN0eWxlTW9kYWw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9O1xuXG4gICAgc3RhdGUgPSB7XG4gICAgICBpc1NlbGVjdGluZzogZmFsc2VcbiAgICB9O1xuXG4gICAgYnVpbGRpbmdDb2xvclNlbGVjdG9yID0gcHJvcHMgPT4gcHJvcHMubWFwU3R5bGUudGhyZWVEQnVpbGRpbmdDb2xvcjtcbiAgICBzZXRDb2xvclNlbGVjdG9yID0gcHJvcHMgPT4gcHJvcHMuc2V0M2RCdWlsZGluZ0NvbG9yO1xuICAgIGNvbG9yU2V0U2VsZWN0b3IgPSBjcmVhdGVTZWxlY3RvcihcbiAgICAgIHRoaXMuYnVpbGRpbmdDb2xvclNlbGVjdG9yLFxuICAgICAgdGhpcy5zZXRDb2xvclNlbGVjdG9yLFxuICAgICAgKHNlbGVjdGVkQ29sb3IsIHNldENvbG9yKSA9PiAoW3tcbiAgICAgICAgc2VsZWN0ZWRDb2xvcixcbiAgICAgICAgc2V0Q29sb3IsXG4gICAgICAgIGlzUmFuZ2U6IGZhbHNlLFxuICAgICAgICBsYWJlbDogJzNEIEJ1aWxkaW5nIENvbG9yJ1xuICAgICAgfV0pXG4gICAgKTtcblxuICAgIF91cGRhdGVDb25maWcgPSBuZXdQcm9wID0+IHtcbiAgICAgIGNvbnN0IG5ld0NvbmZpZyA9IHsuLi50aGlzLnByb3BzLm1hcFN0eWxlLCAuLi5uZXdQcm9wfTtcbiAgICAgIHRoaXMucHJvcHMub25Db25maWdDaGFuZ2UobmV3Q29uZmlnKTtcbiAgICB9O1xuXG4gICAgX3RvZ2dsZVNlbGVjdGluZyA9ICgpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2lzU2VsZWN0aW5nOiAhdGhpcy5zdGF0ZS5pc1NlbGVjdGluZ30pO1xuICAgIH07XG5cbiAgICBfc2VsZWN0U3R5bGUgPSB2YWwgPT4ge1xuICAgICAgdGhpcy5wcm9wcy5vblN0eWxlQ2hhbmdlKHZhbCk7XG4gICAgICB0aGlzLl90b2dnbGVTZWxlY3RpbmcoKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge21hcFN0eWxlfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCBlZGl0YWJsZUxheWVycyA9IERFRkFVTFRfTEFZRVJfR1JPVVBTLm1hcChsZyA9PiBsZy5zbHVnKTtcbiAgICAgIGNvbnN0IGhhc0J1aWxkaW5nTGF5ZXIgPSBtYXBTdHlsZS52aXNpYmxlTGF5ZXJHcm91cHNbJzNkIGJ1aWxkaW5nJ107XG4gICAgICBjb25zdCBjb2xvclNldHMgPSB0aGlzLmNvbG9yU2V0U2VsZWN0b3IodGhpcy5wcm9wcyk7XG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFwLXN0eWxlLXBhbmVsXCI+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxNYXBTdHlsZVNlbGVjdG9yXG4gICAgICAgICAgICAgIG1hcFN0eWxlPXttYXBTdHlsZX1cbiAgICAgICAgICAgICAgaXNTZWxlY3Rpbmc9e3RoaXMuc3RhdGUuaXNTZWxlY3Rpbmd9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9zZWxlY3RTdHlsZX1cbiAgICAgICAgICAgICAgdG9nZ2xlQWN0aXZlPXt0aGlzLl90b2dnbGVTZWxlY3Rpbmd9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAge2VkaXRhYmxlTGF5ZXJzLmxlbmd0aCA/IChcbiAgICAgICAgICAgICAgPExheWVyR3JvdXBTZWxlY3RvclxuICAgICAgICAgICAgICAgIGxheWVycz17bWFwU3R5bGUudmlzaWJsZUxheWVyR3JvdXBzfVxuICAgICAgICAgICAgICAgIGVkaXRhYmxlTGF5ZXJzPXtlZGl0YWJsZUxheWVyc31cbiAgICAgICAgICAgICAgICB0b3BMYXllcnM9e21hcFN0eWxlLnRvcExheWVyR3JvdXBzfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl91cGRhdGVDb25maWd9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgIDxTaWRlUGFuZWxTZWN0aW9uPlxuICAgICAgICAgICAgICA8Q29sb3JTZWxlY3RvclxuICAgICAgICAgICAgICAgIGNvbG9yU2V0cz17Y29sb3JTZXRzfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXshaGFzQnVpbGRpbmdMYXllcn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvU2lkZVBhbmVsU2VjdGlvbj5cbiAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17dGhpcy5wcm9wcy5zaG93QWRkTWFwU3R5bGVNb2RhbH0gc2Vjb25kYXJ5PlxuICAgICAgICAgICAgICA8QWRkIGhlaWdodD1cIjEycHhcIiAvPlxuICAgICAgICAgICAgICBBZGQgTWFwIFN0eWxlXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTWFwTWFuYWdlckZhY3Rvcnk7XG4iXX0=